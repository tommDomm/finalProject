version: '3.5'
services:
  db:
    build: postgresql
    image: flats_postgresql:1.0.0
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    networks:
      - flats_ntwrk
    volumes:
      - ../postgresql:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root" ]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    build: pgadmin
    image: flats_pgadmin:1.0.0
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "82:80"
    networks:
      - flats_ntwrk
  swagger-ui:
    build: swagger-ui
    image: flats_swagger-ui:1.0.0
    ports:
      - "81:8080"
    networks:
      - flats_ntwrk
  user-service:
    build: user-service
    image: flats_user-service:1.0.0
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - flats_ntwrk
    depends_on:
      db:
        condition: service_healthy
  mail-service:
    build: mail-service
    image: flats_mail-service:1.0.0
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - flats_ntwrk
    depends_on:
      db:
        condition: service_healthy
  audit-service:
    build: audit-service
    image: flats_audit-service:1.0.0
    networks:
      - flats_ntwrk
    depends_on:
      db:
        condition: service_healthy
  parser-service:
    build: parser-services/realt
    image: flats_parser:1.0.6
    networks:
      - flats_ntwrk
    depends_on:
      db:
        condition: service_healthy
  flat-service:
    build: flat-service
    image: flat_service:1.0.4
    networks:
      - flats_ntwrk
    depends_on:
      db:
        condition: service_healthy
  proxy:
    build: proxy
    image: flats_proxy:1.0.8
    ports:
      - "80:80"
    networks:
      - flats_ntwrk
    depends_on:
      db:
        condition: service_healthy
networks:
  flats_ntwrk:
    name: flats_ntwrk